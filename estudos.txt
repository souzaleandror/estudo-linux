Capitulo 1 Introducao

Existe outra solução mais elegante que faz uso tanto do VirtualBox quanto do VMware no seu background, o Vagrant http://www.vagrantup.com/.

Por padrão, o Ubuntu já instala uma suíte de aplicativos de escritório gratuita: o LibreOffice, que possui compatibilidade com os arquivos formatados no Microsoft Office.

Se estiver procurando um semelhante ao notepad do Windows, o Ubuntu pos- sui o Gedit.

Capítulo 2
Mão na massa: conhecendo o Shell

2.1 O que é o Shell?
O shell é a interface de acesso ao sistema operacional, onde é possível interagir com o sistema por meio de comandos digitados do teclado. Ele pode ser acessado pelo modo gráfico e diretamente em modo texto.

Abrindo o terminal (Shell)

• ubuntu é o nome do usuário;
• @servidor é o nome do host;
• ~ é a abreviação para a pasta do usuário;
• $ indica que o usuário não possui poderes de administrador.

Agora que entendemos o significado do prompt que aparece, vamos testar al- guns comandos e ver o que acontece.
daniel@casadocodigo:~$ pwd
/home/daniel
daniel@casadocodigo:~$ whoami
daniel
daniel@casadocodigo:~$ date
Thu Sep 26 21:30:07 UTC 2013
daniel@casadocodigo:~$

Ao executar o comando pwd, o retorno foi exatamente o diretório que estamos atualmente chamando de current.
O comando whoami exibe o nome do usuário atual que estamos usando e o date retorna a data atual.
Não se preocupe ainda sobre os poderes de administrador sudo, veremos isso mais adiante.

Existe a opção de vermos essa lista completa, graças ao history, que cria um histórico memorizando tudo o que já digitamos no shell

Outra recomendação para um uso mais produtivo do shell é utilizar a tecla tab, que possui a função de autocompletar.

Ao executar o comando cd / estamos informando ao Shell que queremos na- vegar até o diretório /, mais conhecido como raiz (ou diretório root). A instrução cd é o que permite a navegação entre diretórios.
Já o comando ls lista os arquivos e diretórios, neste caso no diretório raiz, que é onde estamos.

ara fazer a limpeza da tela usamos o comando clear. Teste o comando e veja o resultado. O atalho Ctrl + l tem o mesmo efeito.

Para retornar, temos algumas opções para combinar com o comando cd: • ~ aponta direto para o diretório home do usuário (ou pasta do usuário);
• ~ aponta direto para o diretório home do usuário (ou pasta do usuário);
• /home/ubuntu é o caminho absoluto;
• - último diretório onde esteve.

Agora que voltamos ao nosso diretório home, vamos criar um novo diretório usando o comando mkdir. Chamaremos de aplicativos

Para voltar, usamos o cd .. que significa volte para o diretório anterior.

Utilizando o comando touch, criamos um novo arquivo chamado meu_arquivo. Em seguida usamos o comando mv, passando como parâme- tro o nome do arquivo e o destino para mover o arquivo que criamos. 

Para isso, existe o comando cp, que faz uma cópia do arquivo mantendo o ori- ginal. 

daniel@casadocodigo:~$ cp aplicativos/meu_arquivo .

Observe a legibilidade: estamos falando para o shell copiar o arquivo meu_arquivo que se encontra em aplicativos para o diretório atual, e tudo foi feito sem sair da pasta home. 

Antes de prosseguir vamos ver um pouco sobre arquivos ocultos. Um arquivo oculto é identificado por um "." no início do nome, por exemplo ( .profile). Arquivos ocultos não aparecem em listagens normais de diretórios, para isso usamos um parâmetro no comando ls, ls -a ou, no formato mais detalhado, ls -la. No Ubuntu existe um atalho para esse comando, o ll.

O comando mv também serve para renomear um arquivo. Vamos renomear o arquivo que criamos meu_arquivo para meu_arquivo.txt, adicionando a extensão .txt

Nosso arquivo atualmente está vazio. Vamos escrever algum texto nele e conhe- cer mais um comando, o echo. O echo é utilizado para exibir mensagens na tela ou em um arquivo:
daniel@casadocodigo:~$ echo "Exibindo mensagem na tela"
Exibindo mensagem na tela
daniel@casadocodigo:~$

Agora vamos escrever algo no nosso arquivo com o echo, mas para isso é ne- cessário fazer uso do parâmetro >, confira:
daniel@casadocodigo:~$ echo Escrevendo no arquivo > meu_arquivo.txt

Agora podemos verificar o texto que foi inserido no nosso arquivo, com o co- mando cat

É interessante saber informações sobre o tipo de arquivo, para isso existe o co- mando file

Com o file podemos ver que o nosso arquivo é do tipo text, nota-se também que ao executar o file em um diretório, ele informa o tipo directory. Isso acontece pois no Linux tudo é considerado um arquivo.

agora que já sabemos criar arquivos, e manipular de forma básica, hora de apren- der a remover. Usando o rm podemos deletar arquivos e diretórios

O comando rmdir é responsável por remover diretórios, mas somente diretó- rios vazios.

Usando o rm -r vamos conseguir remover o diretório, o -r é uma opção do comando rm que faz ele remover diretórios que tenham conteúdo de forma recur- siva

2.5 Pedindo ajuda
Sempre que precisarmos de ajuda no Linux, podemos usar o help ou podemos incluir o parâmetro --help, que é suportado na maioria dos comandos.


No Linux a documentação padrão é chamada de man pages, ela contém ajuda para todos os comandos padrões. Vamos ao teste, execute o comando man ls e veja o que ele retorna

O man apresenta todos os tópicos do manual linux, de forma semelhante a um manual impresso e está presente em qualquer distribuição linux. O ambiente apre- sentado pelo man aceita comandos para navegação e busca na documentação:
• h mostra a ajuda do comando man, veja para mais detalhes; • qsairdoman;
• / procura por um texto na documentação apresentada;
• f avança uma tela;
• b volta uma tela.

Obtendo a descrição de comandos
É interessante saber que podemos verificar uma descrição simples de um co- mando, para isso podemos usar o whatis

Localizando arquivos no sistema

A sintaxe do find recebe alguns parâmetros: find [caminho] expressão [ação]

Indicamos o caminho a partir do qual ele irá procurar os arquivos, a expressão na qual podemos definir os critérios de busca e a ação com a qual informamos o que deve ser feito com os arquivos que atenderem aos critérios da busca.
Alguns dos critérios de busca definidos em expressão:
• -name procura arquivos pelo nome;
• -user procura arquivos pelo nome do usuário dono do arquivo;
• -atime procura arquivos que foram acessados há mais de x dias, onde x é o número de dias.

Perceba que informamos o caminho . (que significa aqui), a expressão -name \*.bash*, que quer dizer “busque pelo nome todos os arquivos que contenham a palavra bash no corpo do seu nome”, e a ação -print que é o padrão quando não especificamos de forma explícita.

Teste outra forma de busca com a expressão -atime:
daniel@casadocodigo:~$ find . -atime +1
./.bash_logout
daniel@casadocodigo:~$
No exemplo, o -atime +1 busca por arquivos que forma modificados há mais de 1 dia. Teste o mesmo comando informando -1 desta forma ele retornará arquivos modificados a menos de 1 dia.

Um passeio fora do ambiente gráfico

Além do ambiente gráfico no Linux, existe ainda 6 ambientes de linha de comando, conhecidos pelo nome de TTY (TeleTYpe) ou ainda terminais virtuais. O TTY cor- responde ao tipo dos primeiros terminais usados em computadores.

Para ter acesso a esses ambientes, usamos uma combinação das teclas Ctrl + Alt + FsendoqueFcorrespondedasteclasF1aF6,aF7retornaaoambientegrá- fico.
